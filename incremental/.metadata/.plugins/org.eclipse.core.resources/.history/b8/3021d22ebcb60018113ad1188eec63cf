plan(1,init, sentence(true,move(print("ROBOT: in attesa di comandi dalla console o eventi di interruzione")),'','' ))
plan(1,handleConsoleMsg, sentence(true,msgswitch(consoleMsg, consoleMsg( "start") , not here StateMoveNormal),'','' ))
plan(2,handleConsoleMsg, sentence(true,msgswitch(consoleMsg, consoleMsg( "stop") , not here StateMoveNormal),'','' ))
plan(3,handleConsoleMsg, sentence(true,move(resumeplan),'','' ))
plan(1,handleEnvironmentalEvent, sentence(true,eventswitch(environmentalEvent, Â»environmentalEvent( "bad_temp"), not here StateMoveNormal ),'','' ))
plan(2,handleEnvironmentalEvent, sentence(true,eventswitch(environmentalEvent, Â»environmentalEvent( "bad_time"), not here StateMoveNormal ),'','' ))
plan(3,handleEnvironmentalEvent, sentence(true,move(resumeplan),'','' ))
plan(1,handleCollisionEvent, sentence(true,addRule( robotObstacle ),'','' ))
plan(2,handleCollisionEvent, sentence(true,move(print("ROBOT: collisione rilevata dal sensore, per capire se � mobile aspetto un po', e se non ricevo pi� collisioni allora lo �")),'','' ))
plan(3,handleCollisionEvent, sentence(true,move(print("ROBOT: temporaneamente fermo per collisione")),'','' ))
plan(4,handleCollisionEvent, sentence(true,delay( 700) ,'','' ))
plan(5,handleCollisionEvent, sentence(true,move(print("ROBOT: riprendo ad andare, dopo la collisione")),'','' ))
plan(6,handleCollisionEvent, sentence(true,move(resumeplan),'','' ))
