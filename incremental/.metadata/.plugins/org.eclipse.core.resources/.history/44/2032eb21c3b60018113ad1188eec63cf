plan(1,init, sentence(true,move(print(qabusinesslogicreqan( starts))),'','' ))
plan(2,init, sentence(true,not here StateMoveNormal,'','' ))
plan(3,init, sentence(true,not here StateMoveNormal,'','' ))
plan(1,waitForFrontendActivation, sentence(true,move(print("Waiting for frontend to be ready")),'','' ))
plan(1,handleConsoleReady, sentence(true,move(print("console is ready")),'','' ))
plan(1,waitForUserCmd, sentence(true,move(print("Waiting for user commands")),'','' ))
plan(1,handleConsoleStartCmd, sentence(true,printCurrentEvent(false),'','' ))
plan(2,handleConsoleStartCmd, sentence(true,msgswitch(consoleMsg, consoleCmd( "start") , not here StateMoveNormal),'','' ))
plan(1,handleRobotAnswer, sentence(true,msgswitch(robotAnswer, robotAnswer( "obstacle") , not here StateMoveNormal),'','' ))
plan(2,handleRobotAnswer, sentence(true,msgswitch(robotAnswer, robotAnswer( "clear") , not here StateMoveNormal),'','' ))
plan(1,handleStopOrFinished, sentence(true,eventswitch(finished, Â»finished( "finishedCleaning"), not here StateMoveNormal ),'','' ))
plan(2,handleStopOrFinished, sentence(true,eventswitch(finished, Â»finished( "cantFinish"), not here StateMoveNormal ),'','' ))
plan(3,handleStopOrFinished, sentence(true,move(print("STOP command received from console or triggered from application")),'','' ))
plan(4,handleStopOrFinished, sentence(true,addRule( rStop ),'','' ))
plan(5,handleStopOrFinished, sentence(true,raise( ledEvent , ledEvent( "off") )'),'','' ))
plan(6,handleStopOrFinished, sentence( systemmodel( name( application),value( on)),not here StateMoveNormal,'','' ))
plan(1,handleCityMsg, sentence(true,printCurrentMessage(''),'','' ))
plan(2,handleCityMsg, sentence(true,msgswitch(timeMsg, timeEvent( V) , not here  GuardMove),'','' ))
plan(3,handleCityMsg, sentence(true,msgswitch(tempMsg, tempEvent( V) , not here  GuardMove),'','' ))
plan(4,handleCityMsg, sentence( evalTime( good),not here StateMoveNormal,'','' ))
plan(5,handleCityMsg, sentence(true,move(resumeplan),'','' ))
